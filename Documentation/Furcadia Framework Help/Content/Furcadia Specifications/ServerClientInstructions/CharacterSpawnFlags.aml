<?xml version="1.0" encoding="utf-8"?>
<topic id="ffece671-a97d-4060-a35f-e41e0c23148d" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>Required introduction</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <content>
      <table>
        <title>Furcadia Spawn Avatar Flags</title>
        <tableHeader>
          <row>
            <entry>
              <para>Name</para>
            </entry>
            <entry>
              <para>Decimal</para>
            </entry>
            <entry>
              <para>b220 Integer</para>
            </entry>
            <entry>
              <para>Binary</para>
            </entry>
            <entry>
              <para>Description</para>
            </entry>
          </row>
        </tableHeader>
        <row>
          <entry>
            <para>CHAR_FLAG_HAS_PROFILE</para>
          </entry>
          <entry>
            <para>1</para>
          </entry>
          <entry>
            <para>$</para>
          </entry>
          <entry>
            <para>
              001
            </para>
          </entry>
          <entry>
            <para>
              (Character has an online profile - NOT YET [2009] IN USE)
            </para>
          </entry>
        </row>
        <row>
          <entry>
            <para>CHAR_FLAG_SET_VISIBLE </para>
          </entry>
          <entry>
            <para>2</para>
          </entry>
          <entry>
            <para>%</para>
          </entry>
          <entry>
            <para>
              010
            </para>
          </entry>
           <entry>
              <para></para>
            </entry>
        </row>
        <row>
          <entry>
            <para>CHAR_FLAG_NEW_AVATAR </para>
          </entry>
          <entry>
            <para>4</para>
          </entry>
          <entry>
            <para>'</para>
          </entry>
          <entry>
            <para>
              100
            </para>
          </entry>
          <entry>
            <para>CHAR_FLAG_NEW_AVATAR + CHAR_FLAG_SET_VISIBLE = 6 = ')'b220</para>
            <para>
              When a furre joins a dream, They're new and visible by default. The visible flag can
              be changed by Dragon speak later on.  Poxssibly with local species 0.
            </para>
            <para>
              CHAR_FLAG_NEW_AVATAR will never appear by itself, It'll allways be accompined by another flag.
            </para>
          </entry>
        </row>
      </table>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>

    <relatedTopics>
    <codeEntityReference qualifyHint="false">T:Furcadia.Net.Utils.ServerParser.SpawnAvatar</codeEntityReference>
      <externalLink>
        <linkText>Ice Realm Number Calculator</linkText>
        <linkAlternateText>Visit FTR</linkAlternateText>
        <linkUri>http://ftr.icerealm.org/ref-numeric</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Furcadia Technical Resources</linkText>
        <linkAlternateText>Vist FTR</linkAlternateText>
        <linkUri>http://ftr.icerealm.org/ref-instructions/</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Furcadia Official Documentation Base 220</linkText>
        <linkAlternateText>Visit Furcadia Dev Docs</linkAlternateText>
        <linkUri> http://dev.furcadia.com/docs/base220.pdf </linkUri>
      </externalLink>
      <externalLink>
        <linkText>Official Furcadia Docs v27 Movememnt</linkText>
        <linkAlternateText>Visit Furcadia Dev Docs</linkAlternateText>
        <linkUri>http://dev.furcadia.com/docs/027_movement.html</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Official Furcadia Docs v23 Movememnt</linkText>
        <linkAlternateText>Visit Furcadia Dev Docs</linkAlternateText>
        <linkUri>http://dev.furcadia.com/docs/023_new_movement.pdf</linkUri>
      </externalLink>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
